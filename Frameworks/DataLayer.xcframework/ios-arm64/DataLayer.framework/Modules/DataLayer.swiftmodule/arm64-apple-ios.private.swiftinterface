// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name DataLayer
@_exported import DataLayer
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension Foundation.Data {
  public func map<D>(_ type: D.Type, atKeyPath keyPath: Swift.String? = nil, using decoder: Foundation.JSONDecoder = JSONDecoder(), failsOnEmptyData: Swift.Bool = true) throws -> D where D : Swift.Decodable
}
public protocol FirebaseAPIContract {
  var firebasePath: Swift.String { get }
  var method: Swift.String { get }
  var body: Foundation.Data? { get }
  var apiKey: Swift.String { get }
  func execute() async throws -> Foundation.Data
}
extension DataLayer.FirebaseAPIContract {
  public func execute() async throws -> Foundation.Data
}
public protocol HTTPAPIContract {
  var path: Swift.String { get }
  var method: Swift.String { get }
  var body: Foundation.Data? { get }
  func execute() async throws -> Foundation.Data
}
extension DataLayer.HTTPAPIContract {
  public var method: Swift.String {
    get
  }
  public var body: Foundation.Data? {
    get
  }
  public func execute() async throws -> Foundation.Data
}
